{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//\nexport default {\n  name: \"App\",\n  components: {},\n  data: () => ({\n    // filteredItems: \"\",\n    headers: [\"name\", \"capital\", \"region\", \"flag\"],\n    items: \"\",\n    loading: true,\n    filterRow: [\"capital\"],\n    filters: {\n      all: \"\",\n      name: \"\",\n      capital: \"\",\n      region: \"\",\n      flag: \"\"\n    },\n    emptyItem: [{}]\n  }),\n  created() {\n    this.getCountries();\n  },\n  methods: {\n    CreateEmptyItem() {\n      for (let i = 0; i < this.headers.length; i++) {\n        this.emptyItem[this.headers[i]] = \"\";\n      }\n    },\n    getCountries() {\n      this.axios.get(\"/all\").then(res => {\n        this.items = res.data;\n        //  this.filteredItems = res.data;\n        this.loading = false;\n      });\n    },\n    SelectedFilterRowsItem(headerName) {\n      if (this.filterRow.indexOf(headerName) != -1) {\n        this.filterRow.splice(this.filterRow.indexOf(headerName), 1);\n        this.filters[headerName] = '';\n      } else {\n        this.filterRow.push(headerName);\n      }\n    }\n  },\n  computed: {\n    filteredItems() {\n      if (this.loading) return this.emptyItem;\n      let filterByColumn = true;\n      let filtered = [{}];\n      if (this.filters.all != \"\") filterByColumn = false;\n      function getObjectValuesWithFilter(item, filterCriteria) {\n        let trueCount = 0;\n        if (typeof item == \"object\") {\n          Object.values(item).some(key => {\n            if (typeof key != \"object\") {\n              if (String(key).toLowerCase().includes(filterCriteria)) trueCount++;\n            } else {\n              trueCount += getObjectValuesWithFilter(key, filterCriteria);\n            }\n          });\n        } else {\n          if (String(item).toLowerCase().includes(filterCriteria)) trueCount++;\n        }\n        return trueCount;\n      }\n      if (filterByColumn) {\n        filtered = this.items.filter(item => {\n          return Object.keys(this.filters).every(key => String(item[key]).toLowerCase().includes(this.filters[key].toLowerCase()));\n        });\n      } else {\n        filtered = [{}];\n        filtered = this.items.filter(item => {\n          return Object.values(item).some(key => {\n            let trueCount = 0;\n            trueCount += getObjectValuesWithFilter(key, this.filters.all.toLowerCase());\n            return trueCount > 0 ? true : false;\n          });\n        });\n      }\n      return filtered.length > 0 ? filtered : this.emptyItem;\n    }\n  }\n};","map":{"version":3,"names":["name","components","data","headers","items","loading","filterRow","filters","all","capital","region","flag","emptyItem","created","getCountries","methods","CreateEmptyItem","i","length","axios","get","then","res","SelectedFilterRowsItem","headerName","indexOf","splice","push","computed","filteredItems","filterByColumn","filtered","getObjectValuesWithFilter","item","filterCriteria","trueCount","Object","values","some","key","String","toLowerCase","includes","filter","keys","every"],"sources":["/Users/lika/Desktop/countries-catalog-page/src/components/CountriesList.vue"],"sourcesContent":["<template>\n    <div id=\"app\">\n        <div>\n  <b-card\n    bg-variant=\"light\"\n    title=\"Card Title\"\n    img-src=\"https://picsum.photos/600/300/?image=25\"\n    img-alt=\"Image\"\n    img-top\n    tag=\"article\"\n    style=\"max-width: 20rem;\"\n    class=\"mb-2\"\n  >\n    <b-card-text>\n      Some quick example text to build on the card title and make up the bulk of the card's content.\n    </b-card-text>\n\n    <b-button href=\"#\" variant=\"primary\">Go somewhere</b-button>\n  </b-card>\n</div>\n\n\n      <div>\n        <b-card bg-variant=\"light\">\n          <b-row>\n            <b-col cols=\"11\" >\n              <b-form-input\n                type=\"text\"\n                placeholder=\"Filter countries\"\n                v-model=\"filters.all\"\n              ></b-form-input>\n            </b-col>\n            <b-col cols=\"1\" class=\"col-auto\">\n              \n              <b-dropdown\n                variant=\"link\"\n                toggle-class=\"text-decoration-none\"\n                no-caret\n                dropleft\n              >\n                <template #button-content>\n                  <b-icon icon=\"gear-fill\" aria-hidden=\"true\"></b-icon>\n                </template>\n  \n                <b-dropdown-group header=\"Filtrelenecek Alanlar\" class=\"small\">\n                  <div v-for=\"header in headers\" :key=\"header\">\n                    <b-dropdown-item @click=\"SelectedFilterRowsItem(header)\">\n                      <b-icon\n                        :icon=\"\n                          filterRow.indexOf(header) != -1 ? 'check' : 'blank'\n                        \"\n                        aria-hidden=\"true\"\n                      ></b-icon>\n                      {{ header }}\n                    </b-dropdown-item>\n                  </div>\n                </b-dropdown-group>\n              </b-dropdown>\n            \n            </b-col>\n          </b-row>\n        </b-card>\n  \n        <div class=\"TableClass\">\n          <b-table\n            striped\n            hover\n            :items=\"filteredItems\"\n            :fields=\"headers\"\n            :busy=\"loading\"\n          >\n            <template #table-busy>\n              <div class=\"text-center text-danger my-2\">\n                <b-spinner class=\"align-middle\"></b-spinner>\n                <strong>YÃ¼kleniyor...</strong>\n              </div>\n            </template>\n  \n            <template slot=\"top-row\" slot-scope=\"{ fields }\">\n              <td v-for=\"field in fields\" :key=\"field.key\">\n                <div v-if=\"filterRow.indexOf(field.key) >= 0\">\n                  <b-form-input\n                    type=\"text\"\n                    :placeholder=\"field.label\"\n                    v-model=\"filters[field.key]\"\n                  ></b-form-input>\n                </div>\n              </td>\n            </template>\n  \n            <template #cell(flag)=\"flag\">\n              <!-- `data.value` is the value after formatted by the Formatter -->\n              <img :src=\"flag.value\" width=\"70\" />\n            </template>\n          </b-table>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  //\n  export default {\n    name: \"App\",\n    components: {},\n    data: () => ({\n      // filteredItems: \"\",\n      headers: [\"name\", \"capital\", \"region\", \"flag\"],\n      items: \"\",\n      loading: true,\n      filterRow: [\"capital\"],\n      filters: {\n        all: \"\",\n        name: \"\",\n        capital: \"\",\n        region: \"\",\n        flag: \"\",\n      },\n  \n      emptyItem: [{}],\n    }),\n    created() {\n      this.getCountries();\n    },\n    methods: {\n      CreateEmptyItem() {\n        for (let i = 0; i < this.headers.length; i++) {\n          this.emptyItem[this.headers[i]] = \"\";\n        }\n      },\n      getCountries() {\n        this.axios.get(\"/all\").then((res) => {\n          this.items = res.data;\n          //  this.filteredItems = res.data;\n          this.loading = false;\n        });\n      },\n  \n      SelectedFilterRowsItem(headerName) {\n        if (this.filterRow.indexOf(headerName) != -1) {\n          this.filterRow.splice(this.filterRow.indexOf(headerName), 1);\n          this.filters[headerName] = '';\n        } else {\n          this.filterRow.push(headerName);\n        }\n      },\n    },\n  \n    computed: {\n      filteredItems() {\n        if (this.loading) return this.emptyItem;\n  \n        let filterByColumn = true;\n        let filtered = [{}];\n  \n        if (this.filters.all != \"\") filterByColumn = false;\n  \n        function getObjectValuesWithFilter(item, filterCriteria) {\n          let trueCount = 0;\n          if (typeof item == \"object\") {\n            Object.values(item).some((key) => {\n              if (typeof key != \"object\") {\n                if (String(key).toLowerCase().includes(filterCriteria))\n                  trueCount++;\n              } else {\n                trueCount += getObjectValuesWithFilter(key, filterCriteria);\n              }\n            });\n          } else {\n            if (String(item).toLowerCase().includes(filterCriteria)) trueCount++;\n          }\n          return trueCount;\n        }\n  \n        if (filterByColumn) {\n          filtered = this.items.filter((item) => {\n            return Object.keys(this.filters).every((key) =>\n              String(item[key])\n                .toLowerCase()\n                .includes(this.filters[key].toLowerCase())\n            );\n          });\n        } else {\n          filtered = [{}];\n  \n          filtered = this.items.filter((item) => {\n            return Object.values(item).some((key) => {\n              let trueCount = 0;\n              trueCount += getObjectValuesWithFilter(\n                key,\n                this.filters.all.toLowerCase()\n              );\n  \n              return trueCount > 0 ? true : false;\n            });\n          });\n        }\n  \n        return filtered.length > 0 ? filtered : this.emptyItem;\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .TableClass {\n    margin: calc(2vw);\n  }\n  </style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}