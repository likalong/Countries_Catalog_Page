{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-be457f1c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"TableClass\"\n};\nconst _hoisted_3 = {\n  class: \"text-center text-danger my-2\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Yükleniyor...\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  slot: \"top-row\",\n  \"slot-scope\": \"{ fields }\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_form_input = _resolveComponent(\"b-form-input\");\n  const _component_b_form_group = _resolveComponent(\"b-form-group\");\n  const _component_b_col = _resolveComponent(\"b-col\");\n  const _component_b_icon = _resolveComponent(\"b-icon\");\n  const _component_b_dropdown_item = _resolveComponent(\"b-dropdown-item\");\n  const _component_b_dropdown_group = _resolveComponent(\"b-dropdown-group\");\n  const _component_b_dropdown = _resolveComponent(\"b-dropdown\");\n  const _component_b_row = _resolveComponent(\"b-row\");\n  const _component_b_card = _resolveComponent(\"b-card\");\n  const _component_b_spinner = _resolveComponent(\"b-spinner\");\n  const _component_b_table = _resolveComponent(\"b-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createVNode(_component_b_card, {\n    \"bg-variant\": \"light\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_b_row, null, {\n      default: _withCtx(() => [_createVNode(_component_b_col, {\n        cols: \"11\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_b_form_group, {\n          id: \"input-group-1\",\n          label: \"Email address:\",\n          \"label-for\": \"input-1\",\n          description: \"We'll never share your email with anyone else.\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_b_form_input, {\n            id: \"input-1\",\n            modelValue: _ctx.form.email,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.form.email = $event),\n            type: \"email\",\n            placeholder: \"Enter email\",\n            required: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_b_form_input, {\n          type: \"text\",\n          placeholder: \"Filter countries\",\n          modelValue: _ctx.filters.all,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.filters.all = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_b_col, {\n        cols: \"1\",\n        class: \"col-auto\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_b_dropdown, {\n          variant: \"link\",\n          \"toggle-class\": \"text-decoration-none\",\n          \"no-caret\": \"\",\n          dropleft: \"\"\n        }, {\n          \"button-content\": _withCtx(() => [_createVNode(_component_b_icon, {\n            icon: \"gear-fill\",\n            \"aria-hidden\": \"true\"\n          })]),\n          default: _withCtx(() => [_createVNode(_component_b_dropdown_group, {\n            header: \"Filtrelenecek Alanlar\",\n            class: \"small\"\n          }, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.headers, header => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                key: header\n              }, [_createVNode(_component_b_dropdown_item, {\n                onClick: $event => $options.SelectedFilterRowsItem(header)\n              }, {\n                default: _withCtx(() => [_createVNode(_component_b_icon, {\n                  icon: _ctx.filterRow.indexOf(header) != -1 ? 'check' : 'blank',\n                  \"aria-hidden\": \"true\"\n                }, null, 8 /* PROPS */, [\"icon\"]), _createTextVNode(\" \" + _toDisplayString(header), 1 /* TEXT */)]),\n\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]);\n            }), 128 /* KEYED_FRAGMENT */))]),\n\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_b_table, {\n    striped: \"\",\n    hover: \"\",\n    items: $options.filteredItems,\n    fields: _ctx.headers,\n    busy: _ctx.loading\n  }, {\n    \"table-busy\": _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_b_spinner, {\n      class: \"align-middle\"\n    }), _hoisted_4])]),\n    \"cell(flag)\": _withCtx(flag => [_createCommentVNode(\" `data.value` is the value after formatted by the Formatter \"), _createElementVNode(\"img\", {\n      src: flag.value,\n      width: \"70\"\n    }, null, 8 /* PROPS */, _hoisted_7)]),\n    default: _withCtx(() => [_createElementVNode(\"template\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.fields, field => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: field.key\n      }, [_ctx.filterRow.indexOf(field.key) >= 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createVNode(_component_b_form_input, {\n        type: \"text\",\n        placeholder: field.label,\n        modelValue: _ctx.filters[field.key],\n        \"onUpdate:modelValue\": $event => _ctx.filters[field.key] = $event\n      }, null, 8 /* PROPS */, [\"placeholder\", \"modelValue\", \"onUpdate:modelValue\"])])) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */))])]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"items\", \"fields\", \"busy\"])])])]);\n}","map":{"version":3,"names":["id","class","_createElementVNode","slot","_createElementBlock","_hoisted_1","_createVNode","_component_b_card","_component_b_row","_component_b_col","cols","_component_b_form_group","label","description","_component_b_form_input","_ctx","form","email","$event","type","placeholder","required","filters","all","_component_b_dropdown","variant","dropleft","_withCtx","_component_b_icon","icon","_component_b_dropdown_group","header","_Fragment","_renderList","headers","key","_component_b_dropdown_item","onClick","$options","SelectedFilterRowsItem","filterRow","indexOf","_toDisplayString","_hoisted_2","_component_b_table","striped","hover","items","filteredItems","fields","busy","loading","_hoisted_3","_component_b_spinner","_hoisted_4","flag","_createCommentVNode","src","value","width","_hoisted_5","field","_hoisted_6"],"sources":["/Users/lika/Desktop/countries-catalog-page/src/components/CountriesList.vue"],"sourcesContent":["<template>\n    <div id=\"app\">\n      <div>\n        <b-card bg-variant=\"light\">\n          <b-row>\n            <b-col cols=\"11\" >\n                <b-form-group\n                    id=\"input-group-1\"\n                    label=\"Email address:\"\n                    label-for=\"input-1\"\n                    description=\"We'll never share your email with anyone else.\"\n                >\n                    <b-form-input\n                    id=\"input-1\"\n                    v-model=\"form.email\"\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    required\n                    ></b-form-input>\n                </b-form-group>\n\n              <b-form-input\n                type=\"text\"\n                placeholder=\"Filter countries\"\n                v-model=\"filters.all\"\n              ></b-form-input>\n            </b-col>\n            <b-col cols=\"1\" class=\"col-auto\">\n              \n              <b-dropdown\n                variant=\"link\"\n                toggle-class=\"text-decoration-none\"\n                no-caret\n                dropleft\n              >\n                <template #button-content>\n                  <b-icon icon=\"gear-fill\" aria-hidden=\"true\"></b-icon>\n                </template>\n  \n                <b-dropdown-group header=\"Filtrelenecek Alanlar\" class=\"small\">\n                  <div v-for=\"header in headers\" :key=\"header\">\n                    <b-dropdown-item @click=\"SelectedFilterRowsItem(header)\">\n                      <b-icon\n                        :icon=\"\n                          filterRow.indexOf(header) != -1 ? 'check' : 'blank'\n                        \"\n                        aria-hidden=\"true\"\n                      ></b-icon>\n                      {{ header }}\n                    </b-dropdown-item>\n                  </div>\n                </b-dropdown-group>\n              </b-dropdown>\n            \n            </b-col>\n          </b-row>\n        </b-card>\n  \n        <div class=\"TableClass\">\n          <b-table\n            striped\n            hover\n            :items=\"filteredItems\"\n            :fields=\"headers\"\n            :busy=\"loading\"\n          >\n            <template #table-busy>\n              <div class=\"text-center text-danger my-2\">\n                <b-spinner class=\"align-middle\"></b-spinner>\n                <strong>Yükleniyor...</strong>\n              </div>\n            </template>\n  \n            <template slot=\"top-row\" slot-scope=\"{ fields }\">\n              <td v-for=\"field in fields\" :key=\"field.key\">\n                <div v-if=\"filterRow.indexOf(field.key) >= 0\">\n                  <b-form-input\n                    type=\"text\"\n                    :placeholder=\"field.label\"\n                    v-model=\"filters[field.key]\"\n                  ></b-form-input>\n                </div>\n              </td>\n            </template>\n  \n            <template #cell(flag)=\"flag\">\n              <!-- `data.value` is the value after formatted by the Formatter -->\n              <img :src=\"flag.value\" width=\"70\" />\n            </template>\n          </b-table>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  //\n  export default {\n    name: \"App\",\n    components: {},\n    data: () => ({\n      // filteredItems: \"\",\n      headers: [\"name\", \"capital\", \"region\", \"flag\"],\n      items: \"\",\n      loading: true,\n      filterRow: [\"capital\"],\n      filters: {\n        all: \"\",\n        name: \"\",\n        capital: \"\",\n        region: \"\",\n        flag: \"\",\n      },\n  \n      emptyItem: [{}],\n    }),\n    created() {\n      this.getCountries();\n    },\n    methods: {\n      CreateEmptyItem() {\n        for (let i = 0; i < this.headers.length; i++) {\n          this.emptyItem[this.headers[i]] = \"\";\n        }\n      },\n      getCountries() {\n        this.axios.get(\"/all\").then((res) => {\n          this.items = res.data;\n          //  this.filteredItems = res.data;\n          this.loading = false;\n        });\n      },\n  \n      SelectedFilterRowsItem(headerName) {\n        if (this.filterRow.indexOf(headerName) != -1) {\n          this.filterRow.splice(this.filterRow.indexOf(headerName), 1);\n          this.filters[headerName] = '';\n        } else {\n          this.filterRow.push(headerName);\n        }\n      },\n    },\n  \n    computed: {\n      filteredItems() {\n        if (this.loading) return this.emptyItem;\n  \n        let filterByColumn = true;\n        let filtered = [{}];\n  \n        if (this.filters.all != \"\") filterByColumn = false;\n  \n        function getObjectValuesWithFilter(item, filterCriteria) {\n          let trueCount = 0;\n          if (typeof item == \"object\") {\n            Object.values(item).some((key) => {\n              if (typeof key != \"object\") {\n                if (String(key).toLowerCase().includes(filterCriteria))\n                  trueCount++;\n              } else {\n                trueCount += getObjectValuesWithFilter(key, filterCriteria);\n              }\n            });\n          } else {\n            if (String(item).toLowerCase().includes(filterCriteria)) trueCount++;\n          }\n          return trueCount;\n        }\n  \n        if (filterByColumn) {\n          filtered = this.items.filter((item) => {\n            return Object.keys(this.filters).every((key) =>\n              String(item[key])\n                .toLowerCase()\n                .includes(this.filters[key].toLowerCase())\n            );\n          });\n        } else {\n          filtered = [{}];\n  \n          filtered = this.items.filter((item) => {\n            return Object.values(item).some((key) => {\n              let trueCount = 0;\n              trueCount += getObjectValuesWithFilter(\n                key,\n                this.filters.all.toLowerCase()\n              );\n  \n              return trueCount > 0 ? true : false;\n            });\n          });\n        }\n  \n        return filtered.length > 0 ? filtered : this.emptyItem;\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .TableClass {\n    margin: calc(2vw);\n  }\n  </style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}